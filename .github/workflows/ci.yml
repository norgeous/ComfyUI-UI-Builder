name: ü¶æ CI
on:
  push:
    branches:
      - develop

jobs:
  cache-keys:
    runs-on: ubuntu-latest
    outputs:
      KEY_BRANCH: ${{ steps.cache_keys.outputs.KEY_BRANCH }}
      KEY_MODULES: ${{ steps.cache_keys.outputs.KEY_MODULES }}
    steps:
      - name: ‚§µÔ∏è Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: üîë Invent keys for this run
        id: cache_keys
        run: |
          echo "KEY_BRANCH=${{hashFiles('**/src', '**/public')}}" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo "KEY_MODULES=${{hashFiles('**/package.json', '**/package-lock.json')}}" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY

  npm-install:
    needs: [cache-keys]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ needs.cache-keys.outputs.KEY_MODULES }}

      - name: ‚§µÔ∏è Checkout "develop" branch
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: üß∞ NPM Install
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          npm ci

  lint:
    needs: [cache-keys, npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ‚ôªÔ∏è Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ needs.cache-keys.outputs.KEY_MODULES }}

      - name: üßµ Lint
        run: |
          npm run lint | tee $GITHUB_STEP_SUMMARY

  vite-build:
    needs: [cache-keys, npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore dist
        id: dist_cache
        uses: actions/cache@v4
        with:
          path: dist
          key: dist-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: ‚§µÔ∏è Checkout "develop" branch
        if: steps.dist_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.dist_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ needs.cache-keys.outputs.KEY_MODULES }}

      - name: üáª Vite Build
        if: steps.dist_cache.outputs.cache-hit != 'true'
        run: |
          npm run build

  release:
    needs: [cache-keys, lint, vite-build, storybook-test, visdiff-report]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: ‚§µÔ∏è Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ‚ôªÔ∏è Restore dist
        uses: actions/cache@v4
        with:
          path: dist
          key: dist-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: üìã Prepare orphan "release" branch
        run: |
          git checkout --orphan release
          git rm -rf .github/workflows .vscode public packages src _storycaps_
          git rm -f .eslintrc.cjs .gitattributes .gitignore README.md TODO.md index.html jsconfig.json package-lock.json package.json prettier.config.js vite.config.js
          cp README.release.md README.md
          git rm -f README.release.md
          echo -e 'node_modules\n__pycache__\n' > .gitignore

      - name: üë§ Setup git user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: ‚úçÔ∏è Commit to "release" branch
        run: |
          git add dist/
          git add README.md
          git add .gitignore
          git commit -m "üáª Vite Build"

      - name: ü´∏ Force push "release" branch to origin
        run: |
          git push origin release --force

  storybook-static:
    needs: [cache-keys, npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore storybook-static
        id: storybook_static_cache
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: ‚§µÔ∏è Checkout "develop" branch
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ needs.cache-keys.outputs.KEY_MODULES }}

      - name: üìï Build storybook-static
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        run: |
          npm run sb:build

  storybook-test:
    needs: [cache-keys, storybook-static]
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ‚ôªÔ∏è Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ needs.cache-keys.outputs.KEY_MODULES }}

      - name: ‚ôªÔ∏è Restore storybook-static
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: ‚ñ∂Ô∏è Playwright Install
        run: |
          npx playwright install chromium

      - name: üß™ Storybook smoke, play and a11y tests
        run: |
          npm run unittest:ci -w packages/storybook | tee $GITHUB_STEP_SUMMARY
          ls -l packages/storybook

  storycap:
    needs: [cache-keys, storybook-static]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore storycaps
        id: storycaps_cache
        uses: actions/cache@v4
        with:
          path: _storycaps_
          key: storycaps-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: ‚§µÔ∏è Checkout "develop" branch
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ needs.cache-keys.outputs.KEY_MODULES }}

      - name: ‚ôªÔ∏è Restore storybook-static
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: üë∫ Puppeteer Install
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          npx puppeteer browsers install chrome

      - name: üß¢ Storycap
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          rm -rf _storycaps_
          npm run storycap:ci -w packages/storybook

      - name: üë§ Setup git user
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: ‚úçÔ∏è Commit to orphan "storycaps" branch
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          git checkout --orphan storycaps
          git rm --cached -rf .
          git add _storycaps_
          find _storycaps_ -type f -printf '![storycap](https://raw.githubusercontent.com/norgeous/ComfyUI-UI-Builder/storycaps/%p)\n' | sort | sed 's/ /%20/g' > README.md
          git add README.md
          git commit -m "üß¢ Storycaps"

      - name: ü´∏ Force push "storycaps" branch to origin
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          git push origin storycaps --force

  visdiff-report:
    needs: [cache-keys, storycap]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore visdiff-report
        id: visdiff_report_cache
        uses: actions/cache@v4
        with:
          path: packages/storybook/visdiff-report
          key: visdiff-report-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: ‚§µÔ∏è Checkout "develop" branch
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ needs.cache-keys.outputs.KEY_MODULES }}

      - name: ‚öæ Move baseline into report directory
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        run: |
          mkdir packages/storybook/visdiff-report/
          mv _storycaps_ packages/storybook/visdiff-report/expected/

      - name: ‚ôªÔ∏è Restore storycaps
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: _storycaps_
          key: storycaps-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: üé≠ Generate visdiff-report
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        id: generate
        run: |
          SUMMARY=`npm run regression -w packages/storybook | grep items | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | sed "s/\[reg-suit\] info    //g"`
          CHANGED=`echo "$SUMMARY" | grep "Changed items: " | sed "s/Changed items: //"`
          NEW=`echo "$SUMMARY" | grep "New items: " | sed "s/New items: //"`
          DELETED=`echo "$SUMMARY" | grep "Deleted items: " | sed "s/Deleted items: //"`
          PASSED=`echo "$SUMMARY" | grep "Passed items: " | sed "s/Passed items: //"`
          echo "üé≠ Changed items: $CHANGED" | tee -a $GITHUB_STEP_SUMMARY
          echo "üÜï New items: $NEW" | tee -a $GITHUB_STEP_SUMMARY
          echo "üóëÔ∏è Deleted items: $DELETED" | tee -a $GITHUB_STEP_SUMMARY
          echo "‚úÖ Passed items: $PASSED" | tee -a $GITHUB_STEP_SUMMARY
          EXITCODE=$((CHANGED + NEW + DELETED))
          echo | tee -a $GITHUB_STEP_SUMMARY
          echo "EXITCODE=$EXITCODE" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          ((EXITCODE > 0)) && echo -e "Fail ‚ùå" || echo -e "Pass ‚úÖ" | tee -a $GITHUB_STEP_SUMMARY
          exit 0

      - name: üëã Exit code
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        run: |
          echo "Exit code: ${{ steps.generate.outputs.EXITCODE }}"
          exit ${{ steps.generate.outputs.EXITCODE }}

  github-pages-deploy:
    needs: [cache-keys, lint, storybook-static, storybook-test, visdiff-report]
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: ‚ôªÔ∏è Restore storybook-static
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: ‚ôªÔ∏è Restore visdiff-report
        uses: actions/cache@v4
        with:
          path: packages/storybook/visdiff-report
          key: visdiff-report-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: üéº Compose artifact
        run: |
          mkdir artifact-directory
          mv packages/storybook/visdiff-report/ artifact-directory/visdiff-report/
          mv packages/storybook/storybook-static/ artifact-directory/storybook/
          echo "<center><h1><a href="storybook">üìï Storybook</a></h1><h1><a href="visdiff-report">üé≠ visdiff-report</a></h1></center>" | tee artifact-directory/index.html

      - name: üÜô Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: artifact-directory
          name: github-pages-artifact

      - name: üöÄ Deploy artifact to Github pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages-artifact
