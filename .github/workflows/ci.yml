name: 🦾 CI
on:
  push:
    branches:
      - develop

jobs:
  npm-install:
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ♻️ Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ hashFiles('**/package.json', '**/package-lock.json') }}

      - name: 🧰 NPM Install
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          npm ci

  lint:
    needs: [npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ♻️ Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ hashFiles('**/package.json', '**/package-lock.json') }}

      - name: 🧵 Lint
        run: |
          npm run lint | tee $GITHUB_STEP_SUMMARY

  vite-build:
    needs: [npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ♻️ Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ hashFiles('**/package.json', '**/package-lock.json') }}

      - name: ♻️ Restore dist
        id: dist_cache
        uses: actions/cache@v4
        with:
          path: dist
          key: dist-${{ hashFiles('src/**','public/**') }}

      - name: 🇻 Vite Build
        if: steps.dist_cache.outputs.cache-hit != 'true'
        run: |
          npm run build

  release:
    needs: [lint, vite-build, storybook-test, visdiff-report]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: ⤵️ Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ♻️ Restore dist
        uses: actions/cache@v4
        with:
          path: dist
          key: dist-${{ hashFiles('src/**','public/**') }}

      - name: 📋 Prepare orphan "release" branch
        run: |
          git checkout --orphan release
          git rm -rf .github/workflows .vscode public packages src _storycaps_
          git rm -f .eslintrc.cjs .gitattributes .gitignore README.md TODO.md index.html jsconfig.json package-lock.json package.json prettier.config.js vite.config.js
          cp README.release.md README.md
          git rm -f README.release.md
          echo -e 'node_modules\n__pycache__\n' > .gitignore

      - name: 👤 Setup git user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: ✍️ Commit to "release" branch
        run: |
          git add dist/
          git add README.md
          git add .gitignore
          git commit -m "🇻 Vite Build"

      - name: 🫸 Force push "release" branch to origin
        run: |
          git push origin release --force

  storybook-static:
    needs: [npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ♻️ Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ hashFiles('**/package.json', '**/package-lock.json') }}

      - name: 📕 Build storybook-static
        run: |
          npm run sb:build

      - name: 💾 Cache storybook-static
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static

  storybook-test:
    needs: [storybook-static]
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ♻️ Restore cached node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ hashFiles('**/package.json', '**/package-lock.json') }}

      - name: ♻️ Restore cached storybook-static
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static

      - name: ▶️ Playwright Install
        run: |
          npx playwright install chromium

      - name: 🧪 Storybook smoke, play and a11y tests
        run: |
          npm run unittest:ci -w packages/storybook | tee $GITHUB_STEP_SUMMARY

  storycap:
    needs: [storybook-static]
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ♻️ Restore cached node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ hashFiles('**/package.json', '**/package-lock.json') }}

      - name: ♻️ Restore cached storybook-static
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static

      - name: 👺 Puppeteer Install
        run: |
          npx puppeteer browsers install chrome

      - name: 🧢 Storycap
        run: |
          rm -rf _storycaps_
          npm run storycap:ci -w packages/storybook

      - name: 💾 Cache storycaps
        uses: actions/cache@v4
        with:
          path: _storycaps_
          key: storycaps

      - name: 👤 Setup git user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: ✍️ Commit to orphan "storycaps" branch
        run: |
          git checkout --orphan storycaps
          git rm --cached -rf .
          git add _storycaps_
          find _storycaps_ -type f -printf '![storycap](https://raw.githubusercontent.com/norgeous/ComfyUI-UI-Builder/storycaps/%p)\n' | sort | sed 's/ /%20/g' > README.md
          git add README.md
          git commit -m "🧢 Storycaps"

      - name: 🫸 Force push "storycaps" branch to origin
        run: |
          git push origin storycaps --force

  visdiff-report:
    needs: [storycap]
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Checkout "develop" branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: ♻️ Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: node_modules-${{ hashFiles('**/package.json', '**/package-lock.json') }}

      - name: ⚾ Move baseline into report directory
        run: |
          mkdir packages/storybook/visdiff-report/
          mv _storycaps_ packages/storybook/visdiff-report/expected/

      - name: ♻️ Restore storycaps
        uses: actions/cache@v4
        with:
          path: _storycaps_
          key: storycaps

      - name: 🎭 Generate visdiff-report
        id: generate
        run: |
          SUMMARY=`npm run regression -w packages/storybook | grep items | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | sed "s/\[reg-suit\] info    //g"`
          CHANGED=`echo "$SUMMARY" | grep "Changed items: " | sed "s/Changed items: //"`
          NEW=`echo "$SUMMARY" | grep "New items: " | sed "s/New items: //"`
          DELETED=`echo "$SUMMARY" | grep "Deleted items: " | sed "s/Deleted items: //"`
          PASSED=`echo "$SUMMARY" | grep "Passed items: " | sed "s/Passed items: //"`
          echo "🎭 Changed items: $CHANGED" | tee -a $GITHUB_STEP_SUMMARY
          echo "🆕 New items: $NEW" | tee -a $GITHUB_STEP_SUMMARY
          echo "🗑️ Deleted items: $DELETED" | tee -a $GITHUB_STEP_SUMMARY
          echo "✅ Passed items: $PASSED" | tee -a $GITHUB_STEP_SUMMARY
          EXITCODE=$((CHANGED + NEW + DELETED))
          echo | tee -a $GITHUB_STEP_SUMMARY
          echo "EXITCODE=$EXITCODE" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          ((EXITCODE > 0)) && echo -e "Fail ❌" || echo -e "Pass ✅" | tee -a $GITHUB_STEP_SUMMARY
          exit 0

      - name: 🆙 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: packages/storybook/visdiff-report
          name: visdiff-report

      - name: 👋 Exit code
        run: |
          echo "Exit code: ${{ steps.generate.outputs.EXITCODE }}"
          exit ${{ steps.generate.outputs.EXITCODE }}

  github-pages-deploy:
    needs: [lint, storybook-static, storybook-test, visdiff-report]
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: ♻️ Restore cached storybook-static
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static

      - name: 🆙 Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: packages/storybook/storybook-static
          name: storybook-static

      - name: 🚀 Deploy artifact to Github pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: storybook-static
