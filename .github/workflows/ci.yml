name: ü¶æ CI
on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      CACHE_KEY_NPM_INSTALL:
        required: true
        type: string
      CACHE_KEY_LINT:
        required: true
        type: string
      CACHE_KEY_LINT_CHANGES:
        required: true
        type: string
      CACHE_KEY_VITE_DIST:
        required: true
        type: string
      CACHE_KEY_STORYBOOK:
        required: true
        type: string
      CACHE_KEY_SB_TEST:
        required: true
        type: string
      CACHE_KEY_STORYCAPS:
        required: true
        type: string
      CACHE_KEY_VISDIFF:
        required: true
        type: string
      CACHE_KEY_GH_PAGES:
        required: true
        type: string

jobs:
  npm-install:
    name: üß∞ NPM Install
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}

      - name: üö™Early Exit with cached results
        if: steps.node_modules_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "‚ö†Ô∏è CACHED RESULT! ‚ö†Ô∏è\n" | tee -a $GITHUB_STEP_SUMMARY
          cat ${{ runner.temp }}/npm-install-report/OUTPUT.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat ${{ runner.temp }}/npm-install-report/EXITCODE`

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: üß∞ NPM Install
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          mkdir ${{ runner.temp }}/npm-install-report
          npm ci | tee -a ${{ runner.temp }}/npm-install-report/OUTPUT.txt
          EXITCODE=${PIPESTATUS[0]}
          echo "$EXITCODE" > ${{ runner.temp }}/npm-install-report/EXITCODE
          ((EXITCODE > 0)) && echo -e "\nFail ‚ùå" | tee -a ${{ runner.temp }}/npm-install-report/OUTPUT.txt
          ((EXITCODE == 0)) && echo -e "\nPass ‚úÖ" | tee -a ${{ runner.temp }}/npm-install-report/OUTPUT.txt
          cat ${{ runner.temp }}/npm-install-report/OUTPUT.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: üíæ Save npm-install-report
        if: ${{ steps.node_modules_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('node_modules') != '' }}
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}

  npm-outdated:
    name: ‚è∞ NPM Outdated
    needs: [npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ‚è∞ NPM Outdated
        run: |
          echo "\`\`\`console" >> $GITHUB_STEP_SUMMARY
          npm outdated | tee -a $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

          echo "\`\`\`console" >> $GITHUB_STEP_SUMMARY
          npx -y npm-check-updates | tee -a $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  lint:
    name: üßµ Lint
    needs: [npm-install]
    runs-on: ubuntu-latest
    outputs:
      LINT_MODIFIED_COUNT: ${{ steps.lint.outputs.LINT_MODIFIED_COUNT }}
    steps:
      - name: ‚ôªÔ∏è Restore lint-report
        id: lint_cache
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/lint-report
          key: ${{ inputs.CACHE_KEY_LINT }}

      - name: üö™Early Exit with cached results
        if: steps.lint_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "‚ö†Ô∏è CACHED RESULT! ‚ö†Ô∏è\n" | tee -a $GITHUB_STEP_SUMMARY
          cat ${{ runner.temp }}/lint-report/OUTPUT.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat ${{ runner.temp }}/lint-report/EXITCODE`

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.lint_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.lint_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: üßµ Lint
        id: lint
        if: steps.lint_cache.outputs.cache-hit != 'true'
        run: |
          mkdir ${{ runner.temp }}/lint-report
          npm run lint | tee -a ${{ runner.temp }}/lint-report/OUTPUT.txt
          EXITCODE=${PIPESTATUS[0]}
          LINT_MODIFIED_COUNT=`git status -s -uno | wc -l`
          echo "Lint has modified $LINT_MODIFIED_COUNT files" | tee -a ${{ runner.temp }}/lint-report/OUTPUT.txt
          echo "LINT_MODIFIED_COUNT=$LINT_MODIFIED_COUNT" | tee -a $GITHUB_OUTPUT
          echo "$EXITCODE" > ${{ runner.temp }}/lint-report/EXITCODE
          ((EXITCODE > 0)) && echo -e "\nFail ‚ùå" | tee -a ${{ runner.temp }}/lint-report/OUTPUT.txt
          ((EXITCODE == 0)) && echo -e "\nPass ‚úÖ" | tee -a ${{ runner.temp }}/lint-report/OUTPUT.txt
          cat ${{ runner.temp }}/lint-report/OUTPUT.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: üíæ Save lint-report
        if: ${{ steps.lint_cache.outputs.cache-hit != 'true' && !cancelled()}}
        uses: actions/cache/save@v4
        with:
          path: ${{ runner.temp }}/lint-report
          key: ${{ inputs.CACHE_KEY_LINT }}

      - name: üíæ Save lint changes
        if: ${{ steps.lint.outputs.LINT_MODIFIED_COUNT > 0}}
        uses: actions/cache/save@v4
        with:
          path: |
            ./*
            !.git
            !.github
            !node_modules
            !_storycaps_
          key: ${{ inputs.CACHE_KEY_LINT_CHANGES }}

  vite-build:
    name: ‚ö° Vite
    needs: [npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore dist
        id: dist_cache
        uses: actions/cache@v4
        with:
          path: |
            dist
            README.md
            __init__.py
          key: ${{ inputs.CACHE_KEY_VITE_DIST }}

      - name: üö™Early Exit with cached results
        if: steps.dist_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "‚ö†Ô∏è CACHED RESULT! ‚ö†Ô∏è\n" | tee -a $GITHUB_STEP_SUMMARY
          cat dist/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat dist/EXITCODE`

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.dist_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.dist_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ‚ö° Vite Build
        if: steps.dist_cache.outputs.cache-hit != 'true'
        run: |
          mv README.release.md README.md
          NO_COLOR=true npm run build | tee -a vite-summary.txt
          EXITCODE=${PIPESTATUS[0]}
          mv vite-summary.txt dist/summary.txt
          echo "$EXITCODE" > dist/EXITCODE
          ((EXITCODE > 0)) && echo -e "\nFail ‚ùå" | tee -a dist/summary.txt
          ((EXITCODE == 0)) && echo -e "\nPass ‚úÖ" | tee -a dist/summary.txt
          cat dist/summary.txt >> $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: üíæ Save dist
        if: ${{ steps.dist_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('dist') != '' }}
        uses: actions/cache/save@v4
        with:
          path: |
            dist
            README.md
            __init__.py
          key: ${{ inputs.CACHE_KEY_VITE_DIST }}

  storybook-static:
    name: üìï Storybook
    needs: [npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore storybook-static
        id: storybook_static_cache
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}

      - name: üö™Early Exit with cached results
        if: steps.storybook_static_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "‚ö†Ô∏è CACHED RESULT! ‚ö†Ô∏è\n" | tee -a $GITHUB_STEP_SUMMARY
          cat packages/storybook/storybook-static/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat packages/storybook/storybook-static/EXITCODE`

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: üìï Build storybook-static
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        run: |
          npm run build -w packages/storybook | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | tee -a packages/storybook/summary.txt
          EXITCODE=${PIPESTATUS[0]}
          mv packages/storybook/summary.txt packages/storybook/storybook-static/summary.txt
          echo "$EXITCODE" > packages/storybook/storybook-static/EXITCODE
          ((EXITCODE > 0)) && echo -e "\nFail ‚ùå" | tee -a packages/storybook/storybook-static/summary.txt
          ((EXITCODE == 0)) && echo -e "\nPass ‚úÖ" | tee -a packages/storybook/storybook-static/summary.txt
          cat packages/storybook/storybook-static/summary.txt >> $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: üíæ Save storybook-static
        if: ${{ steps.storybook_static_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('storybook-test') != '' }}
        uses: actions/cache/save@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}

  storybook-test:
    name: üß™ Storybook Test
    needs: [storybook-static]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore storybook-test
        id: storybook_test_cache
        uses: actions/cache@v4
        with:
          path: storybook-test
          key: ${{ inputs.CACHE_KEY_SB_TEST }}

      - name: üö™Early Exit with cached results
        if: steps.storybook_test_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "‚ö†Ô∏è CACHED RESULT! ‚ö†Ô∏è\n" | tee -a $GITHUB_STEP_SUMMARY
          cat storybook-test/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat storybook-test/EXITCODE`

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ‚ôªÔ∏è Restore storybook-static
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}
          fail-on-cache-miss: true

      - name: ‚ñ∂Ô∏è Playwright Install
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install chromium

      - name: üß™ Storybook smoke, play and a11y tests
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        run: |
          npm run unittest:ci -w packages/storybook | tee -a TESTRESULT.txt
          EXITCODE=${PIPESTATUS[0]}
          mkdir storybook-test
          cat TESTRESULT.txt | grep "\[TEST\]" > storybook-test/summary.txt
          echo "$EXITCODE" > storybook-test/EXITCODE
          ((EXITCODE > 0)) && echo -e "\nFail ‚ùå" | tee -a storybook-test/summary.txt
          ((EXITCODE == 0)) && echo -e "\nPass ‚úÖ" | tee -a storybook-test/summary.txt
          cat storybook-test/summary.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: üíæ Save storybook-test
        if: ${{ steps.storybook_test_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('storybook-test') != '' }}
        uses: actions/cache/save@v4
        with:
          path: storybook-test
          key: ${{ inputs.CACHE_KEY_SB_TEST }}

  storycap:
    name: üß¢ Storycap
    needs: [storybook-static]
    runs-on: ubuntu-latest
    outputs:
      STORYCAP_CHANGE_COUNT: ${{ steps.check-changes.outputs.STORYCAP_CHANGE_COUNT }}
    steps:
      - name: ‚ôªÔ∏è Restore storycaps
        id: storycaps_cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}

      - name: üö™Early Exit with cached results
        if: steps.storycaps_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "‚ö†Ô∏è CACHED RESULT! ‚ö†Ô∏è\n" | tee -a $GITHUB_STEP_SUMMARY
          cat ${{ runner.temp }}/storycap-report/OUTPUT.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat ${{ runner.temp }}/storycap-report/EXITCODE`

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ‚ôªÔ∏è Restore storybook-static
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}
          fail-on-cache-miss: true

      - name: üë∫ Puppeteer Install
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          npx puppeteer browsers install chrome

      - name: üß¢ Storycap
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          rm -rf _storycaps_
          mkdir _storycaps_
          mkdir ${{ runner.temp }}/storycap-report
          npm run storycap:ci -w packages/storybook | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | tee -a ${{ runner.temp }}/storycap-report/OUTPUT.txt
          EXITCODE=${PIPESTATUS[0]}
          echo "$EXITCODE" >  ${{ runner.temp }}/storycap-report/EXITCODE
          STORYCAP_CHANGE_COUNT=`git status -s | wc -l`
          echo -e "\nPNG file Change count is $STORYCAP_CHANGE_COUNT" | tee -a ${{ runner.temp }}/storycap-report/OUTPUT.txt
          echo "STORYCAP_CHANGE_COUNT=$STORYCAP_CHANGE_COUNT" | tee -a $GITHUB_OUTPUT
          ((EXITCODE > 0)) && echo -e "\nFail ‚ùå" | tee -a ${{ runner.temp }}/storycap-report/OUTPUT.txt
          ((EXITCODE == 0)) && echo -e "\nPass ‚úÖ" | tee -a ${{ runner.temp }}/storycap-report/OUTPUT.txt
          cat ${{ runner.temp }}/storycap-report/OUTPUT.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: üíæ Save _storycaps_
        if: ${{ steps.storycaps_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('_storycaps_') != '' }}
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}

  visdiff-report:
    name: üé≠ Visdiff
    needs: [storycap]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore visdiff-report
        id: visdiff_report_cache
        uses: actions/cache@v4
        with:
          path: packages/storybook/visdiff-report
          key: ${{ inputs.CACHE_KEY_VISDIFF }}

      - name: üö™Early Exit with cached results
        if: steps.visdiff_report_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "‚ö†Ô∏è CACHED RESULT! ‚ö†Ô∏è\n" | tee -a $GITHUB_STEP_SUMMARY
          cat packages/storybook/visdiff-report/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat packages/storybook/visdiff-report/EXITCODE`

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ‚ôªÔ∏è Restore the new storycaps
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}
          fail-on-cache-miss: true

      - name: ‚§µÔ∏è Checkout _storycaps_ from develop into expected
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: develop
          sparse-checkout: _storycaps_
          sparse-checkout-cone-mode: false
          path: packages/storybook/visdiff-report

      - name: üé≠ Generate visdiff-report
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        run: |
          mv packages/storybook/visdiff-report/_storycaps_ packages/storybook/visdiff-report/expected
          SUMMARY=`npm run regression -w packages/storybook | grep items | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | sed "s/\[reg-suit\] info    //g"`
          rm -rf packages/storybook/visdiff-report/.git # for some reason report is created as a repo
          CHANGED=`echo "$SUMMARY" | grep "Changed items: " | sed "s/Changed items: //"`
          NEW=`echo "$SUMMARY" | grep "New items: " | sed "s/New items: //"`
          DELETED=`echo "$SUMMARY" | grep "Deleted items: " | sed "s/Deleted items: //"`
          PASSED=`echo "$SUMMARY" | grep "Passed items: " | sed "s/Passed items: //"`
          EXITCODE=$((CHANGED + NEW + DELETED))
          echo "üé≠ Changed items: $CHANGED" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "üÜï New items: $NEW" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "üóëÔ∏è Deleted items: $DELETED" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "‚úÖ Passed items: $PASSED" | tee -a packages/storybook/visdiff-report/summary.txt
          ((EXITCODE > 0)) && echo -e "\nFail ‚ùå" | tee -a packages/storybook/visdiff-report/summary.txt
          ((EXITCODE == 0)) && echo -e "\nPass ‚úÖ" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "$EXITCODE" > packages/storybook/visdiff-report/EXITCODE
          cat packages/storybook/visdiff-report/summary.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: üíæ Save visdiff-report
        if: ${{ steps.visdiff_report_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('packages/storybook/visdiff-report') != '' }}
        uses: actions/cache/save@v4
        with:
          path: packages/storybook/visdiff-report
          key: ${{ inputs.CACHE_KEY_VISDIFF }}

  compose:
    name: üéº Compose Artifact
    needs:
      [
        npm-install,
        lint,
        vite-build,
        storybook-static,
        storybook-test,
        storycap,
        visdiff-report,
      ]
    if: ${{ always() && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore gh-pages
        id: gh_pages_cache
        uses: actions/cache@v4
        with:
          path: gh-pages-directory
          key: ${{ inputs.CACHE_KEY_GH_PAGES }}

      - name: ‚§µÔ∏è Checkout "${{ github.head_ref || github.ref_name }}" branch
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ‚ôªÔ∏è Restore lint-report
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/lint-report
          key: ${{ inputs.CACHE_KEY_LINT }}
          fail-on-cache-miss: true

      - name: ‚ôªÔ∏è Restore Vite dist
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            dist
            README.md
            __init__.py
          key: ${{ inputs.CACHE_KEY_VITE_DIST }}
          fail-on-cache-miss: true

      - name: ‚ôªÔ∏è Restore storybook-static
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}
          fail-on-cache-miss: true

      - name: ‚ôªÔ∏è Restore storybook-test
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: storybook-test
          key: ${{ inputs.CACHE_KEY_SB_TEST }}
          fail-on-cache-miss: true

      - name: ‚ôªÔ∏è Restore storycaps
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}
          fail-on-cache-miss: true

      - name: ‚ôªÔ∏è Restore visdiff-report
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: packages/storybook/visdiff-report
          key: ${{ inputs.CACHE_KEY_VISDIFF }}
          fail-on-cache-miss: true

      - name: üìÑ Create storycaps index.html
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        run: |
          echo "<style>" >> _storycaps_/index.html
          echo "body{ background: black; display: flex; justify-content: center; }" >> _storycaps_/index.html
          echo "div{ display: grid; grid-template-columns: auto auto; gap: 4px; }" >> _storycaps_/index.html
          echo "img{ display: block; width: 100%; max-width: 412px; }" >> _storycaps_/index.html
          echo "</style>" >> _storycaps_/index.html
          echo "<div>" >> _storycaps_/index.html
          find _storycaps_/**/*.png -type f -printf "%p\n" | sort | sed -e 's/_storycaps_\///g' -e 's/ /%20/g' -e 's/^/<img src="/g' -e 's/$/" \/>/g' >> _storycaps_/index.html
          echo "</div>" >> _storycaps_/index.html

      - name: üìÑ Update template index.pr-preview.html
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        run: |
          NPMINSTALL_EXITCODE=`cat ${{ runner.temp }}/npm-install-report/EXITCODE`
          LINT_EXITCODE=`cat ${{ runner.temp }}/lint-report/EXITCODE`
          VITE_EXITCODE=`cat dist/EXITCODE`
          STORYBOOK_EXITCODE=`cat packages/storybook/storybook-static/EXITCODE`

          (($NPMINSTALL_EXITCODE == 0)) && NPMINSTALL_EMOJI='‚úÖ' || NPMINSTALL_EMOJI='‚ùå'
          (($LINT_EXITCODE == 0)) && LINT_EMOJI='‚úÖ' || LINT_EMOJI='‚ùå'
          (($VITE_EXITCODE == 0)) && VITE_EMOJI='‚úÖ' || VITE_EMOJI='‚ùå'
          (($STORYBOOK_EXITCODE == 0)) && STORYBOOK_EMOJI='‚úÖ' || STORYBOOK_EMOJI='‚ùå'
          ((`cat storybook-test/EXITCODE` == 0)) && SBTEST_EMOJI='‚úÖ' || SBTEST_EMOJI='‚ùå'
          ((`cat ${{ runner.temp }}/storycap-report/EXITCODE` == 0)) && STORYCAP_EMOJI='‚úÖ' || STORYCAP_EMOJI='‚ùå'
          ((`cat packages/storybook/visdiff-report/EXITCODE` == 0)) && VISDIFF_EMOJI='‚úÖ' || VISDIFF_EMOJI='‚ùå'
          BUILDDATE=$(date +'%d/%m/%Y %H:%M:%S %Z')

          sed -i "s/{{NPMINSTALL_EXITCODE}}/$NPMINSTALL_EXITCODE/g" -i index.pr-preview.html
          sed -i "s/{{LINT_EXITCODE}}/$LINT_EXITCODE/g" -i index.pr-preview.html
          sed -i "s/{{VITE_EXITCODE}}/$VITE_EXITCODE/g" -i index.pr-preview.html
          sed -i "s/{{STORYBOOK_EXITCODE}}/$STORYBOOK_EXITCODE/g" -i index.pr-preview.html

          sed -i "s/{{BRANCH}}/${{ github.head_ref || github.ref_name }}/g" -i index.pr-preview.html
          sed -i "s/{{NPMINSTALL_EMOJI}}/$NPMINSTALL_EMOJI/g" -i index.pr-preview.html
          sed -i "s/{{LINT_EMOJI}}/$LINT_EMOJI/g" -i index.pr-preview.html
          sed -i "s/{{VITE_EMOJI}}/$VITE_EMOJI/g" -i index.pr-preview.html
          sed -i "s/{{STORYBOOK_EMOJI}}/$STORYBOOK_EMOJI/g" -i index.pr-preview.html
          sed -i "s/{{SBTEST_EMOJI}}/$SBTEST_EMOJI/g" -i index.pr-preview.html
          sed -i "s/{{STORYCAP_EMOJI}}/$STORYCAP_EMOJI/g" -i index.pr-preview.html
          sed -i "s/{{VISDIFF_EMOJI}}/$VISDIFF_EMOJI/g" -i index.pr-preview.html
          sed -i "s|{{BUILDDATE}}|$BUILDDATE|g" -i index.pr-preview.html

      - name: üéº Compose Artifact
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        run: |
          mkdir gh-pages-directory
          mv ${{ runner.temp }}/npm-install-report/   gh-pages-directory/npm-install-report/
          mv ${{ runner.temp }}/lint-report/          gh-pages-directory/lint-report/
          mv dist/                                    gh-pages-directory/vite/
          mv packages/storybook/storybook-static/     gh-pages-directory/storybook/
          mv storybook-test/                          gh-pages-directory/storybook-test/
          mv _storycaps_/                             gh-pages-directory/storycaps/
          mv ${{ runner.temp }}/storycap-report/      gh-pages-directory/storycaps/storycap-report/
          mv packages/storybook/visdiff-report/       gh-pages-directory/visdiff/
          mv index.pr-preview.html                    gh-pages-directory/index.html
          ls -l gh-pages-directory

  lint-commit:
    name: ‚úçÔ∏è Lint commit
    needs: [lint]
    if: needs.lint.outputs.LINT_MODIFIED_COUNT > 0
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore lint-changes
        uses: actions/cache@v4
        with:
          path: |
            ./*
            !.git
            !.github
            !node_modules
            !_storycaps_
          key: ${{ inputs.CACHE_KEY_LINT_CHANGES }}
          fail-on-cache-miss: true

      - name: ‚úçÔ∏è Commit lint changes back into "${{ inputs.ref }}" branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add . | tee -a $GITHUB_STEP_SUMMARY
          git commit -m "üßµ Lint from CI" | tee -a $GITHUB_STEP_SUMMARY
          git status
          ls -haXl
          git push

  storycap-commit:
    name: ‚úçÔ∏è Storycap commit
    needs: [storycap]
    if: needs.storycap.outputs.STORYCAP_CHANGE_COUNT > 0
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore storycaps
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}
          fail-on-cache-miss: true

      - name: ‚úçÔ∏è Commit changed pngs back into "${{ inputs.ref }}" branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add _storycaps_ | tee -a $GITHUB_STEP_SUMMARY
          git commit -m "üß¢ Storycaps from CI" | tee -a $GITHUB_STEP_SUMMARY
          git push
