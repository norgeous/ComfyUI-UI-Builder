name: ü¶æ CI
on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
    outputs:
      KEY_BRANCH:
        value: ${{ jobs.cache-keys.outputs.KEY_BRANCH }}

      CACHE_KEY_NPM_INSTALL:
        value: ${{ jobs.cache-keys.outputs.CACHE_KEY_NPM_INSTALL }}
      CACHE_KEY_LINT:
        value: ${{ jobs.cache-keys.outputs.CACHE_KEY_LINT }}
      CACHE_KEY_VITE_DIST:
        value: ${{ jobs.cache-keys.outputs.CACHE_KEY_VITE_DIST }}
      CACHE_KEY_STORYBOOK:
        value: ${{ jobs.cache-keys.outputs.CACHE_KEY_STORYBOOK }}
      CACHE_KEY_SB_TEST:
        value: ${{ jobs.cache-keys.outputs.CACHE_KEY_SB_TEST }}
      CACHE_KEY_STORYCAP:
        value: ${{ jobs.cache-keys.outputs.CACHE_KEY_STORYCAP }}
      CACHE_KEY_VISDIFF:
        value: ${{ jobs.cache-keys.outputs.CACHE_KEY_VISDIFF }}

jobs:
  cache-keys:
    name: üîë Cache Keys
    runs-on: ubuntu-latest
    outputs:
      KEY_BRANCH: ${{ steps.cache_keys.outputs.KEY_BRANCH }}

      CACHE_KEY_NPM_INSTALL: ${{ steps.cache_keys.outputs.CACHE_KEY_NPM_INSTALL }}
      CACHE_KEY_LINT: ${{ steps.cache_keys.outputs.CACHE_KEY_LINT }}
      CACHE_KEY_VITE_DIST: ${{ steps.cache_keys.outputs.CACHE_KEY_VITE_DIST }}
      CACHE_KEY_STORYBOOK: ${{ steps.cache_keys.outputs.CACHE_KEY_STORYBOOK }}
      CACHE_KEY_SB_TEST: ${{ steps.cache_keys.outputs.CACHE_KEY_SB_TEST }}
      CACHE_KEY_STORYCAP: ${{ steps.cache_keys.outputs.CACHE_KEY_STORYCAP }}
      CACHE_KEY_VISDIFF: ${{ steps.cache_keys.outputs.CACHE_KEY_VISDIFF }}
    steps:
      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: üîë Invent cache keys for this run
        id: cache_keys
        run: |
          echo "KEY_BRANCH=${{hashFiles('**/src', '**/public')}}" | tee -a $GITHUB_OUTPUT

          echo "CACHE_KEY_NPM_INSTALL=node_modules-${{hashFiles('**/package.json', '**/package-lock.json')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_LINT=lint-${{hashFiles('**')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_VITE_DIST=vite-dist-${{hashFiles('**')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_STORYBOOK=storybook-${{hashFiles('**/package.json', '**/package-lock.json', '**/src', '**/public', '**/packages/storybook')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_SB_TEST=sb-test-${{hashFiles('**/package.json', '**/package-lock.json', '**/src', '**/public', '**/packages/storybook')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_STORYCAP=storycap-${{hashFiles('**/package.json', '**/package-lock.json', '**/src', '**/public', '**/packages/storybook', '_storycaps_')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_VISDIFF=visdiff-${{hashFiles('**/package.json', '**/package-lock.json', '**/src', '**/public', '**/packages/storybook', '_storycaps_')}}" | tee -a $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT > $GITHUB_STEP_SUMMARY

  npm-install:
    name: üß∞ NPM Install
    needs: [cache-keys]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_NPM_INSTALL }}

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: üß∞ NPM Install
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          npm ci

  lint:
    name: üßµ Lint
    needs: [cache-keys, npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_NPM_INSTALL }}

      - name: üßµ Lint
        run: |
          npm run lint | tee $GITHUB_STEP_SUMMARY

  vite-build:
    name: üáª Vite
    needs: [cache-keys, npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore dist
        id: dist_cache
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_VITE_DIST }}

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.dist_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.dist_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_NPM_INSTALL }}

      - name: üáª Vite Build
        if: steps.dist_cache.outputs.cache-hit != 'true'
        run: |
          npm run build

  storybook-static:
    name: üìï Storybook
    needs: [cache-keys, npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore storybook-static
        id: storybook_static_cache
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_NPM_INSTALL }}

      - name: üìï Build storybook-static
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        run: |
          npm run sb:build

  storybook-test:
    name: üß™ Storybook Test
    needs: [cache-keys, storybook-static]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore storybook-test
        id: storybook_test_cache
        uses: actions/cache@v4
        with:
          path: storybook-test
          key: storybook-test-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: üö™Early Exit with cached results
        if: steps.storybook_test_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "‚ö†Ô∏è CACHED RESULT! ‚ö†Ô∏è\n" | tee -a $GITHUB_STEP_SUMMARY
          cat storybook-test/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat storybook-test/EXITCODE`

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_NPM_INSTALL }}

      - name: ‚ôªÔ∏è Restore storybook-static
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: ‚ñ∂Ô∏è Playwright Install
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install chromium

      - name: üß™ Storybook smoke, play and a11y tests
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        run: |
          npm run unittest:ci -w packages/storybook | tee -a TESTRESULT.txt
          EXITCODE=$?
          mkdir storybook-test
          cat TESTRESULT.txt | grep "\[TEST\]" > storybook-test/summary.txt
          echo "$EXITCODE" > storybook-test/EXITCODE
          cat storybook-test/summary.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      - name: üíæ Save storybook-test
        if: ${{ always() && !cancelled() && hashFiles('storybook-test') != '' && steps.storybook_test_cache.outputs.cache-hit != 'true'}}
        uses: actions/cache/save@v4
        with:
          path: storybook-test
          key: storybook-test-${{ needs.cache-keys.outputs.KEY_BRANCH }}

  storycap:
    name: üß¢ Storycap
    needs: [cache-keys, storybook-static]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore storycaps
        id: storycaps_cache
        uses: actions/cache@v4
        with:
          path: _storycaps_
          key: storycaps-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_NPM_INSTALL }}

      - name: ‚ôªÔ∏è Restore storybook-static
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: storybook-static-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: üë∫ Puppeteer Install
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          npx puppeteer browsers install chrome

      - name: üß¢ Storycap
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          rm -rf _storycaps_
          npm run storycap:ci -w packages/storybook

      # - name: üë§ Setup git user
      #   if: steps.storycaps_cache.outputs.cache-hit != 'true'
      #   run: |
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com

      # - name: ‚úçÔ∏è Commit to orphan "storycaps" branch
      #   if: steps.storycaps_cache.outputs.cache-hit != 'true'
      #   run: |
      #     git checkout --orphan storycaps
      #     git rm --cached -rf .
      #     git add _storycaps_
      #     find _storycaps_ -type f -printf '![storycap](https://raw.githubusercontent.com/norgeous/ComfyUI-UI-Builder/storycaps/%p)\n' | sort | sed 's/ /%20/g' > README.md
      #     git add README.md
      #     git commit -m "üß¢ Storycaps"

      # - name: ü´∏ Force push "storycaps" branch to origin
      #   if: steps.storycaps_cache.outputs.cache-hit != 'true'
      #   run: |
      #     git push origin storycaps --force

  visdiff-report:
    name: üé≠ Visdiff
    needs: [cache-keys, storycap]
    runs-on: ubuntu-latest
    steps:
      - name: ‚ôªÔ∏è Restore visdiff-report
        id: visdiff_report_cache
        uses: actions/cache@v4
        with:
          path: packages/storybook/visdiff-report
          key: visdiff-report-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: üö™Early Exit with cached results
        if: steps.visdiff_report_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "‚ö†Ô∏è CACHED RESULT! ‚ö†Ô∏è\n" | tee -a $GITHUB_STEP_SUMMARY
          cat packages/storybook/visdiff-report/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat packages/storybook/visdiff-report/EXITCODE`

      - name: ‚§µÔ∏è Checkout "${{ inputs.ref }}" branch
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ‚ôªÔ∏è Restore node_modules
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/storybook/node_modules
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_NPM_INSTALL }}

      - name: ‚öæ Move baseline into report directory
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        run: |
          mkdir packages/storybook/visdiff-report/
          mv _storycaps_ packages/storybook/visdiff-report/expected/

      - name: ‚ôªÔ∏è Restore storycaps
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: _storycaps_
          key: storycaps-${{ needs.cache-keys.outputs.KEY_BRANCH }}

      - name: üé≠ Generate visdiff-report
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        run: |
          SUMMARY=`npm run regression -w packages/storybook | grep items | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | sed "s/\[reg-suit\] info    //g"`
          CHANGED=`echo "$SUMMARY" | grep "Changed items: " | sed "s/Changed items: //"`
          NEW=`echo "$SUMMARY" | grep "New items: " | sed "s/New items: //"`
          DELETED=`echo "$SUMMARY" | grep "Deleted items: " | sed "s/Deleted items: //"`
          PASSED=`echo "$SUMMARY" | grep "Passed items: " | sed "s/Passed items: //"`
          EXITCODE=$((CHANGED + NEW + DELETED))
          echo "üé≠ Changed items: $CHANGED" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "üÜï New items: $NEW" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "üóëÔ∏è Deleted items: $DELETED" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "‚úÖ Passed items: $PASSED" | tee -a packages/storybook/visdiff-report/summary.txt
          echo | tee -a packages/storybook/visdiff-report/summary.txt
          ((EXITCODE > 0)) && echo "Fail ‚ùå" | tee -a packages/storybook/visdiff-report/summary.txt
          ((EXITCODE == 0)) && echo "Pass ‚úÖ" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "$EXITCODE" > packages/storybook/visdiff-report/EXITCODE
          cat packages/storybook/visdiff-report/summary.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      - name: üíæ Save visdiff-report
        if: ${{ always() && !cancelled() && hashFiles('packages/storybook/visdiff-report') != '' && steps.visdiff_report_cache.outputs.cache-hit != 'true'}}
        uses: actions/cache/save@v4
        with:
          path: packages/storybook/visdiff-report
          key: visdiff-report-${{ needs.cache-keys.outputs.KEY_BRANCH }}
