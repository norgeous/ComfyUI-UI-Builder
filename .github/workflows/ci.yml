name: 🦾 CI
on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      CACHE_KEY_NPM_INSTALL:
        required: true
        type: string
      CACHE_KEY_LINT:
        required: true
        type: string
      CACHE_KEY_VITE_DIST:
        required: true
        type: string
      CACHE_KEY_STORYBOOK:
        required: true
        type: string
      CACHE_KEY_SB_TEST:
        required: true
        type: string
      CACHE_KEY_STORYCAPS:
        required: true
        type: string
      CACHE_KEY_VISDIFF:
        required: true
        type: string
      CACHE_KEY_GH_PAGES:
        required: true
        type: string

jobs:
  npm-install:
    name: 🧰 NPM Install
    runs-on: ubuntu-latest
    steps:
      - name: ♻️ Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}

      - name: 🚪Early Exit with cached results
        if: steps.node_modules_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "⚠️ CACHED RESULT! ⚠️\n" | tee -a $GITHUB_STEP_SUMMARY
          cat ${{ runner.temp }}/npm-install-report/OUTPUT.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat ${{ runner.temp }}/npm-install-report/EXITCODE`

      - name: ⤵️ Checkout "${{ inputs.ref }}" branch
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: 🧰 NPM Install
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          mkdir ${{ runner.temp }}/npm-install-report
          npm ci | tee -a ${{ runner.temp }}/npm-install-report/OUTPUT.txt
          EXITCODE=${PIPESTATUS[0]}
          echo "$EXITCODE" > ${{ runner.temp }}/npm-install-report/EXITCODE
          npm outdated | tee -a ${{ runner.temp }}/npm-install-report/OUTPUT.txt
          ((EXITCODE > 0)) && echo -e "\nFail ❌" | tee -a ${{ runner.temp }}/npm-install-report/OUTPUT.txt
          ((EXITCODE == 0)) && echo -e "\nPass ✅" | tee -a ${{ runner.temp }}/npm-install-report/OUTPUT.txt
          cat ${{ runner.temp }}/npm-install-report/OUTPUT.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: 💾 Save npm-install-report
        if: ${{ steps.node_modules_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('node_modules') != '' }}
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}

  lint:
    name: 🧵 Lint
    needs: [npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ♻️ Restore lint-report
        id: lint_cache
        uses: actions/cache@v4
        with:
          path: lint-report
          key: ${{ inputs.CACHE_KEY_LINT }}

      - name: 🚪Early Exit with cached results
        if: steps.lint_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "⚠️ CACHED RESULT! ⚠️\n" | tee -a $GITHUB_STEP_SUMMARY
          cat lint-report/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat lint-report/EXITCODE`

      - name: ⤵️ Checkout "${{ inputs.ref }}" branch
        if: steps.lint_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ♻️ Restore node_modules
        if: steps.lint_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: 🧵 Lint
        if: steps.lint_cache.outputs.cache-hit != 'true'
        run: |
          mkdir lint-report
          npm run lint | tee -a lint-report/summary.txt
          EXITCODE=${PIPESTATUS[0]}
          echo "$EXITCODE" > lint-report/EXITCODE
          # TODO: this might not be enough as the linter runs with --fix and --silent, we mighht need to check git status and commit changes
          ((EXITCODE > 0)) && echo -e "\nFail ❌" | tee -a lint-report/summary.txt
          ((EXITCODE == 0)) && echo -e "\nPass ✅" | tee -a lint-report/summary.txt
          cat lint-report/summary.txt > $GITHUB_STEP_SUMMARY
          echo | tee -a $GITHUB_STEP_SUMMARY
          echo | tee -a $GITHUB_STEP_SUMMARY
          git status | tee -a $GITHUB_STEP_SUMMARY
          MODIFIED_COUNT=`git status -s -uno | wc -l`
          echo "MODIFIED_COUNT $MODIFIED_COUNT"
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: 💾 Save lint-report
        if: ${{ steps.lint_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('lint-report') != '' }}
        uses: actions/cache/save@v4
        with:
          path: lint-report
          key: ${{ inputs.CACHE_KEY_LINT }}

  vite-build:
    name: ⚡ Vite
    needs: [npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ♻️ Restore dist
        id: dist_cache
        uses: actions/cache@v4
        with:
          path: |
            dist
            README.md
            __init__.py
          key: ${{ inputs.CACHE_KEY_VITE_DIST }}

      - name: 🚪Early Exit with cached results
        if: steps.dist_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "⚠️ CACHED RESULT! ⚠️\n" | tee -a $GITHUB_STEP_SUMMARY
          cat dist/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat dist/EXITCODE`

      - name: ⤵️ Checkout "${{ inputs.ref }}" branch
        if: steps.dist_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ♻️ Restore node_modules
        if: steps.dist_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ⚡ Vite Build
        if: steps.dist_cache.outputs.cache-hit != 'true'
        run: |
          mv README.release.md README.md
          NO_COLOR=true npm run build | tee -a vite-summary.txt
          EXITCODE=${PIPESTATUS[0]}
          mv vite-summary.txt dist/summary.txt
          echo "$EXITCODE" > dist/EXITCODE
          ((EXITCODE > 0)) && echo -e "\nFail ❌" | tee -a dist/summary.txt
          ((EXITCODE == 0)) && echo -e "\nPass ✅" | tee -a dist/summary.txt
          cat dist/summary.txt >> $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: 💾 Save dist
        if: ${{ steps.dist_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('dist') != '' }}
        uses: actions/cache/save@v4
        with:
          path: |
            dist
            README.md
            __init__.py
          key: ${{ inputs.CACHE_KEY_VITE_DIST }}

  storybook-static:
    name: 📕 Storybook
    needs: [npm-install]
    runs-on: ubuntu-latest
    steps:
      - name: ♻️ Restore storybook-static
        id: storybook_static_cache
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}

      - name: 🚪Early Exit with cached results
        if: steps.storybook_static_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "⚠️ CACHED RESULT! ⚠️\n" | tee -a $GITHUB_STEP_SUMMARY
          cat packages/storybook/storybook-static/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat packages/storybook/storybook-static/EXITCODE`

      - name: ⤵️ Checkout "${{ inputs.ref }}" branch
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ♻️ Restore node_modules
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: 📕 Build storybook-static
        if: steps.storybook_static_cache.outputs.cache-hit != 'true'
        run: |
          npm run sb:build | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | tee -a packages/storybook/summary.txt
          EXITCODE=${PIPESTATUS[0]}
          mv packages/storybook/summary.txt packages/storybook/storybook-static/summary.txt
          echo "$EXITCODE" > packages/storybook/storybook-static/EXITCODE
          ((EXITCODE > 0)) && echo -e "\nFail ❌" | tee -a packages/storybook/storybook-static/summary.txt
          ((EXITCODE == 0)) && echo -e "\nPass ✅" | tee -a packages/storybook/storybook-static/summary.txt
          cat packages/storybook/storybook-static/summary.txt >> $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: 💾 Save storybook-static
        if: ${{ steps.storybook_static_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('storybook-test') != '' }}
        uses: actions/cache/save@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}

  storybook-test:
    name: 🧪 Storybook Test
    needs: [storybook-static]
    runs-on: ubuntu-latest
    steps:
      - name: ♻️ Restore storybook-test
        id: storybook_test_cache
        uses: actions/cache@v4
        with:
          path: storybook-test
          key: ${{ inputs.CACHE_KEY_SB_TEST }}

      - name: 🚪Early Exit with cached results
        if: steps.storybook_test_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "⚠️ CACHED RESULT! ⚠️\n" | tee -a $GITHUB_STEP_SUMMARY
          cat storybook-test/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat storybook-test/EXITCODE`

      - name: ⤵️ Checkout "${{ inputs.ref }}" branch
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ♻️ Restore node_modules
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ♻️ Restore storybook-static
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}
          fail-on-cache-miss: true

      - name: ▶️ Playwright Install
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install chromium

      - name: 🧪 Storybook smoke, play and a11y tests
        if: steps.storybook_test_cache.outputs.cache-hit != 'true'
        run: |
          npm run unittest:ci -w packages/storybook | tee -a TESTRESULT.txt
          EXITCODE=${PIPESTATUS[0]}
          mkdir storybook-test
          cat TESTRESULT.txt | grep "\[TEST\]" > storybook-test/summary.txt
          echo "$EXITCODE" > storybook-test/EXITCODE
          ((EXITCODE > 0)) && echo -e "\nFail ❌" | tee -a storybook-test/summary.txt
          ((EXITCODE == 0)) && echo -e "\nPass ✅" | tee -a storybook-test/summary.txt
          cat storybook-test/summary.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: 💾 Save storybook-test
        if: ${{ steps.storybook_test_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('storybook-test') != '' }}
        uses: actions/cache/save@v4
        with:
          path: storybook-test
          key: ${{ inputs.CACHE_KEY_SB_TEST }}

  storycap:
    name: 🧢 Storycap
    needs: [storybook-static]
    runs-on: ubuntu-latest
    outputs:
      CHANGE_COUNT: ${{ steps.check-changes.outputs.CHANGE_COUNT }}
    steps:
      - name: ♻️ Restore storycaps
        id: storycaps_cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}

      - name: 🚪Early Exit with cached results
        if: steps.storycaps_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "⚠️ CACHED RESULT! ⚠️\n" | tee -a $GITHUB_STEP_SUMMARY
          cat ${{ runner.temp }}/storycap-report/OUTPUT.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat ${{ runner.temp }}/storycap-report/EXITCODE`

      - name: ⤵️ Checkout "${{ inputs.ref }}" branch
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ♻️ Restore node_modules
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ♻️ Restore storybook-static
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}
          fail-on-cache-miss: true

      - name: 👺 Puppeteer Install
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          npx puppeteer browsers install chrome

      - name: 🧢 Storycap
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          rm -rf _storycaps_
          mkdir _storycaps_
          mkdir ${{ runner.temp }}/storycap-report
          npm run storycap:ci -w packages/storybook | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | tee -a ${{ runner.temp }}/storycap-report/OUTPUT.txt
          EXITCODE=${PIPESTATUS[0]}
          echo "$EXITCODE" >  ${{ runner.temp }}/storycap-report/EXITCODE
          ((EXITCODE > 0)) && echo -e "\nFail ❌" | tee -a ${{ runner.temp }}/storycap-report/OUTPUT.txt
          ((EXITCODE == 0)) && echo -e "\nPass ✅" | tee -a ${{ runner.temp }}/storycap-report/OUTPUT.txt
          cat ${{ runner.temp }}/storycap-report/OUTPUT.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      - name: 🕵️ Count changes
        id: check-changes
        if: steps.storycaps_cache.outputs.cache-hit != 'true'
        run: |
          git status
          CHANGE_COUNT=`git status -s | wc -l`
          echo "Change count is $CHANGE_COUNT" | tee -a $GITHUB_STEP_SUMMARY
          echo "CHANGE_COUNT=$CHANGE_COUNT" | tee -a $GITHUB_OUTPUT

      # even if the previous step exits with failure, we still want to save the results
      - name: 💾 Save _storycaps_
        if: ${{ steps.storycaps_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('_storycaps_') != '' }}
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}

  visdiff-report:
    name: 🎭 Visdiff
    needs: [storycap]
    runs-on: ubuntu-latest
    steps:
      - name: ♻️ Restore visdiff-report
        id: visdiff_report_cache
        uses: actions/cache@v4
        with:
          path: packages/storybook/visdiff-report
          key: ${{ inputs.CACHE_KEY_VISDIFF }}

      - name: 🚪Early Exit with cached results
        if: steps.visdiff_report_cache.outputs.cache-hit == 'true'
        run: |
          echo -e "⚠️ CACHED RESULT! ⚠️\n" | tee -a $GITHUB_STEP_SUMMARY
          cat packages/storybook/visdiff-report/summary.txt | tee -a $GITHUB_STEP_SUMMARY
          exit `cat packages/storybook/visdiff-report/EXITCODE`

      - name: ⤵️ Checkout "${{ inputs.ref }}" branch
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ♻️ Restore node_modules
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ♻️ Restore the new storycaps
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}
          fail-on-cache-miss: true

      - name: ⤵️ Checkout _storycaps_ from develop into expected
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: develop
          sparse-checkout: _storycaps_
          sparse-checkout-cone-mode: false
          path: packages/storybook/visdiff-report

      - name: 🎭 Generate visdiff-report
        if: steps.visdiff_report_cache.outputs.cache-hit != 'true'
        run: |
          mv packages/storybook/visdiff-report/_storycaps_ packages/storybook/visdiff-report/expected
          SUMMARY=`npm run regression -w packages/storybook | grep items | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | sed "s/\[reg-suit\] info    //g"`
          rm -rf packages/storybook/visdiff-report/.git # for some reason report is created as a repo
          CHANGED=`echo "$SUMMARY" | grep "Changed items: " | sed "s/Changed items: //"`
          NEW=`echo "$SUMMARY" | grep "New items: " | sed "s/New items: //"`
          DELETED=`echo "$SUMMARY" | grep "Deleted items: " | sed "s/Deleted items: //"`
          PASSED=`echo "$SUMMARY" | grep "Passed items: " | sed "s/Passed items: //"`
          EXITCODE=$((CHANGED + NEW + DELETED))
          echo "🎭 Changed items: $CHANGED" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "🆕 New items: $NEW" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "🗑️ Deleted items: $DELETED" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "✅ Passed items: $PASSED" | tee -a packages/storybook/visdiff-report/summary.txt
          ((EXITCODE > 0)) && echo -e "\nFail ❌" | tee -a packages/storybook/visdiff-report/summary.txt
          ((EXITCODE == 0)) && echo -e "\nPass ✅" | tee -a packages/storybook/visdiff-report/summary.txt
          echo "$EXITCODE" > packages/storybook/visdiff-report/EXITCODE
          cat packages/storybook/visdiff-report/summary.txt > $GITHUB_STEP_SUMMARY
          exit $EXITCODE

      # even if the previous step exits with failure, we still want to save the results
      - name: 💾 Save visdiff-report
        if: ${{ steps.visdiff_report_cache.outputs.cache-hit != 'true' && !cancelled() && hashFiles('packages/storybook/visdiff-report') != '' }}
        uses: actions/cache/save@v4
        with:
          path: packages/storybook/visdiff-report
          key: ${{ inputs.CACHE_KEY_VISDIFF }}

  compose:
    name: 🎼 Compose Artifact
    needs:
      [
        npm-install,
        lint,
        vite-build,
        storybook-static,
        storybook-test,
        storycap,
        visdiff-report,
      ]
    if: ${{ always() && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: ♻️ Restore gh-pages
        id: gh_pages_cache
        uses: actions/cache@v4
        with:
          path: gh-pages-directory
          key: ${{ inputs.CACHE_KEY_GH_PAGES }}

      - name: ⤵️ Checkout "${{ github.head_ref || github.ref_name }}" branch
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: ♻️ Restore node_modules
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/npm-install-report
            node_modules
            packages/storybook/node_modules
          key: ${{ inputs.CACHE_KEY_NPM_INSTALL }}
          fail-on-cache-miss: true

      - name: ♻️ Restore lint-report
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: lint-report
          key: ${{ inputs.CACHE_KEY_LINT }}
          fail-on-cache-miss: true

      - name: ♻️ Restore Vite dist
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            dist
            README.md
            __init__.py
          key: ${{ inputs.CACHE_KEY_VITE_DIST }}
          fail-on-cache-miss: true

      - name: ♻️ Restore storybook-static
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: packages/storybook/storybook-static
          key: ${{ inputs.CACHE_KEY_STORYBOOK }}
          fail-on-cache-miss: true

      - name: ♻️ Restore storybook-test
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: storybook-test
          key: ${{ inputs.CACHE_KEY_SB_TEST }}
          fail-on-cache-miss: true

      - name: ♻️ Restore storycaps
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}
          fail-on-cache-miss: true

      - name: ♻️ Restore visdiff-report
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: packages/storybook/visdiff-report
          key: ${{ inputs.CACHE_KEY_VISDIFF }}
          fail-on-cache-miss: true

      - name: 📄 Create storycaps index.html
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        run: |
          echo "<style>" >> _storycaps_/index.html
          echo "body{ background: black; display: flex; justify-content: center; }" >> _storycaps_/index.html
          echo "div{ display: grid; grid-template-columns: auto auto; gap: 4px; }" >> _storycaps_/index.html
          echo "img{ display: block; width: 100%; max-width: 412px; }" >> _storycaps_/index.html
          echo "</style>" >> _storycaps_/index.html
          echo "<div>" >> _storycaps_/index.html
          find _storycaps_/**/*.png -type f -printf "%p\n" | sort | sed -e 's/_storycaps_\///g' -e 's/ /%20/g' -e 's/^/<img src="/g' -e 's/$/" \/>/g' >> _storycaps_/index.html
          echo "</div>" >> _storycaps_/index.html

      - name: 📄 Create ghindex.html
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        run: |
          echo "<style>body{font-family:Arial;background:black;color:white} a{color:white;text-decoration:none}</style>" | tee -a ghindex.html
          echo "<center>" | tee -a ghindex.html
          echo "<h1>Summary for: ${{ github.head_ref || github.ref_name }}</h1>" | tee -a ghindex.html
          echo "<table>" | tee -a ghindex.html

          ((`cat npm-install-report/EXITCODE` == 0)) && NPMINSTALLEMOJI='✅' || NPMINSTALLEMOJI='❌'
          echo "<tr><td><a href="npm-install-report/summary.txt">🧰 NPM Install</a></td><td>$NPMINSTALLEMOJI</td></tr>" | tee -a ghindex.html

          ((`cat lint-report/EXITCODE` == 0)) && LINTEMOJI='✅' || LINTEMOJI='❌'
          echo "<tr><td><a href="lint-report/summary.txt">🧵 Lint</a></td><td>$LINTEMOJI</td></tr>" | tee -a ghindex.html

          ((`cat dist/EXITCODE` == 0)) && VITEEMOJI='✅' || VITEEMOJI='❌'
          echo "<tr><td><a href="vite">⚡ Vite</a></td><td>$VITEEMOJI</td></tr>" | tee -a ghindex.html

          ((`cat packages/storybook/storybook-static/EXITCODE` == 0)) && STORYBOOKEMOJI='✅' || STORYBOOKEMOJI='❌'
          echo "<tr><td><a href="storybook">📕 Storybook</a></td><td>$STORYBOOKEMOJI</td></tr>" | tee -a ghindex.html

          ((`cat storybook-test/EXITCODE` == 0)) && SBTESTEMOJI='✅' || SBTESTEMOJI='❌'
          echo "<tr><td><a href="storybook-test/summary.txt">🧪 Storybook Test</a></td><td>$SBTESTEMOJI</td></tr>" | tee -a ghindex.html

          ((`cat _storycaps_/EXITCODE` == 0)) && STORYCAPEMOJI='✅' || STORYCAPEMOJI='❌'
          echo "<tr><td><a href="storycaps">🧢 Storycaps</a></td><td>$STORYCAPEMOJI</td></tr>" | tee -a ghindex.html

          ((`cat packages/storybook/visdiff-report/EXITCODE` == 0)) && VISDIFFEMOJI='✅' || VISDIFFEMOJI='❌'
          echo "<tr><td><a href="visdiff">🎭 Visdiff</a></td><td>$VISDIFFEMOJI</td></tr>" | tee -a ghindex.html

          echo "</table>" | tee -a ghindex.html
          echo "<h4>Built on: $(date +'%d/%m/%Y %H:%M:%S %Z')</h4>" | tee -a ghindex.html
          echo "</center>" | tee -a ghindex.html

      - name: 🎼 Compose Artifact
        if: steps.gh_pages_cache.outputs.cache-hit != 'true'
        run: |
          mkdir gh-pages-directory
          mv npm-install-report/                  gh-pages-directory/npm-install-report/
          mv lint-report/                         gh-pages-directory/lint-report/
          mv dist/                                gh-pages-directory/vite/
          mv packages/storybook/storybook-static/ gh-pages-directory/storybook/
          mv storybook-test/                      gh-pages-directory/storybook-test/
          mv _storycaps_/                         gh-pages-directory/storycaps/
          mv packages/storybook/visdiff-report/   gh-pages-directory/visdiff/
          mv ghindex.html                         gh-pages-directory/index.html
          ls -l gh-pages-directory

  storycap-commit:
    name: ✍️ Storycap commit
    needs: [storycap]
    if: needs.storycap.outputs.CHANGE_COUNT > 0
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Checkout "${{ inputs.ref }}" branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: ♻️ Restore storycaps
        id: storycaps_cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/storycap-report
            _storycaps_
          key: ${{ inputs.CACHE_KEY_STORYCAPS }}
          fail-on-cache-miss: true

      - name: ✍️ Commit changed pngs back into "${{ inputs.ref }}" branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add _storycaps_ | tee -a $GITHUB_STEP_SUMMARY
          git commit -m "🧢 Storycaps from CI" | tee -a $GITHUB_STEP_SUMMARY
          git push
