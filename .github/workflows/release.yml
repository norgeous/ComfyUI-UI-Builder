name: pages-build

on:
  push:
    branches:
      - develop
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency: preview-${{ github.ref }}

jobs:
  cache-keys:
    name: üîë Cache Keys
    runs-on: ubuntu-latest
    outputs:
      CACHE_KEY_NPM_INSTALL: ${{ steps.invent_cache_keys.outputs.CACHE_KEY_NPM_INSTALL }}
      CACHE_KEY_LINT: ${{ steps.invent_cache_keys.outputs.CACHE_KEY_LINT }}
      CACHE_KEY_VITE_DIST: ${{ steps.invent_cache_keys.outputs.CACHE_KEY_VITE_DIST }}
      CACHE_KEY_STORYBOOK: ${{ steps.invent_cache_keys.outputs.CACHE_KEY_STORYBOOK }}
      CACHE_KEY_SB_TEST: ${{ steps.invent_cache_keys.outputs.CACHE_KEY_SB_TEST }}
      CACHE_KEY_STORYCAPS: ${{ steps.invent_cache_keys.outputs.CACHE_KEY_STORYCAPS }}
      CACHE_KEY_VISDIFF: ${{ steps.invent_cache_keys.outputs.CACHE_KEY_VISDIFF }}
      CACHE_KEY_GH_PAGES: ${{ steps.invent_cache_keys.outputs.CACHE_KEY_GH_PAGES }}
      GH_PAGES_CACHE_HIT: ${{ steps.check_cache_hit.outputs.GH_PAGES_CACHE_HIT }}
    steps:
      - name: ‚§µÔ∏è Checkout "${{ github.head_ref || github.ref_name }}" branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: üîë Invent cache keys for this run
        id: invent_cache_keys
        run: |
          echo "CACHE_KEY_NPM_INSTALL=node_modules-${{hashFiles('**/package.json', '**/package-lock.json')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_LINT=lint-${{hashFiles('**', '!.git/**')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_VITE_DIST=vite-dist-${{hashFiles('**/package.json', '**/package-lock.json', '**/src', '!**.stories.js', '!**.stories.jsx', '**/public', 'README.release.md')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_STORYBOOK=storybook-${{hashFiles('**/package.json', '**/package-lock.json', '**/src', '**/public', '**/packages/storybook')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_SB_TEST=sb-test-${{hashFiles('**/package.json', '**/package-lock.json', '**/src', '**/public', '**/packages/storybook')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_STORYCAPS=storycaps-${{hashFiles('**/package.json', '**/package-lock.json', '**/src', '**/public', '**/packages/storybook', '_storycaps_')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_VISDIFF=visdiff-${{hashFiles('**/package.json', '**/package-lock.json', '**/src', '**/public', '**/packages/storybook', '_storycaps_')}}" | tee -a $GITHUB_OUTPUT
          echo "CACHE_KEY_GH_PAGES=gh-pages-${{hashFiles('**', '!.git/**')}}" | tee -a $GITHUB_OUTPUT
          echo "\`\`\`console" >> $GITHUB_STEP_SUMMARY
          cat $GITHUB_OUTPUT >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: ‚ôªÔ∏è Restore gh-pages
        id: gh_pages_cache
        uses: actions/cache@v4
        with:
          path: gh-pages-directory
          key: ${{ steps.invent_cache_keys.outputs.CACHE_KEY_GH_PAGES }}

      - name: ‚è© Check gh-pages already exists
        id: check_cache_hit
        run: |
          echo "GH_PAGES_CACHE_HIT=${{steps.gh_pages_cache.outputs.cache-hit}}" | tee -a $GITHUB_OUTPUT
          echo "Already cached? ${{steps.invent_cache_keys.outputs.CACHE_KEY_GH_PAGES}}" | tee -a $GITHUB_STEP_SUMMARY
          echo ${{steps.gh_pages_cache.outputs.cache-hit}} | tee -a $GITHUB_STEP_SUMMARY

  ci:
    needs: [cache-keys]
    name: ü¶æ CI
    if: needs.cache-keys.outputs.GH_PAGES_CACHE_HIT != 'true'
    uses: ./.github/workflows/ci.yml
    with:
      ref: ${{ github.head_ref || github.ref_name }}
      CACHE_KEY_NPM_INSTALL: ${{ needs.cache-keys.outputs.CACHE_KEY_NPM_INSTALL }}
      CACHE_KEY_LINT: ${{ needs.cache-keys.outputs.CACHE_KEY_LINT }}
      CACHE_KEY_VITE_DIST: ${{ needs.cache-keys.outputs.CACHE_KEY_VITE_DIST }}
      CACHE_KEY_STORYBOOK: ${{ needs.cache-keys.outputs.CACHE_KEY_STORYBOOK }}
      CACHE_KEY_SB_TEST: ${{ needs.cache-keys.outputs.CACHE_KEY_SB_TEST }}
      CACHE_KEY_STORYCAPS: ${{ needs.cache-keys.outputs.CACHE_KEY_STORYCAPS }}
      CACHE_KEY_VISDIFF: ${{ needs.cache-keys.outputs.CACHE_KEY_VISDIFF }}
      CACHE_KEY_GH_PAGES: ${{ needs.cache-keys.outputs.CACHE_KEY_GH_PAGES }}

  deploy-preview:
    name: üöÄ Deploy preview to "gh-pages"
    needs: [cache-keys, ci]
    if: ${{ always() && !cancelled() && (github.head_ref || github.ref_name) != 'develop' }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout "${{ github.head_ref || github.ref_name }}" branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: ‚ôªÔ∏è Restore gh-pages
        id: gh_pages_cache
        uses: actions/cache@v4
        with:
          path: gh-pages-directory
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_GH_PAGES }}
          fail-on-cache-miss: true

      - name: ‚úçÔ∏è Commit build to "gh-pages" branch
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: gh-pages-directory

  deploy-develop:
    name: üöÄ Deploy develop to "gh-pages"
    needs: [cache-keys, ci]
    if: ${{ always() && !cancelled() && github.ref_name == 'develop' }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout "gh-pages" branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: ‚ôªÔ∏è Restore gh-pages
        id: gh_pages_cache
        uses: actions/cache@v4
        with:
          path: gh-pages-directory
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_GH_PAGES }}
          fail-on-cache-miss: true

      - name: ‚úçÔ∏è Commit build to "gh-pages" branch
        run: |
          rm -rf develop
          git config user.name github-actions
          git config user.email github-actions@github.com
          mv gh-pages-directory develop
          git add develop | tee -a $GITHUB_STEP_SUMMARY
          git commit -m "üöÄ Deploy develop" | tee -a $GITHUB_STEP_SUMMARY
          git push | tee -a $GITHUB_STEP_SUMMARY

  release:
    name: üöÄ Release
    needs: [cache-keys, ci]
    if: ${{ !cancelled() && github.ref_name == 'develop' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: ‚§µÔ∏è Checkout "release" branch
        uses: actions/checkout@v4
        with:
          ref: release

      - name: ‚ôªÔ∏è Restore dist
        uses: actions/cache@v4
        with:
          path: |
            dist
            README.md
            __init__.py
          key: ${{ needs.cache-keys.outputs.CACHE_KEY_VITE_DIST }}
          fail-on-cache-miss: true

      - name: ‚úçÔ∏è Commit to "release" branch
        run: |
          rm dist/EXITCODE dist/summary.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "üöÄ Release from develop" | tee -a $GITHUB_STEP_SUMMARY
          git status | tee -a $GITHUB_STEP_SUMMARY
          git push | tee -a $GITHUB_STEP_SUMMARY
